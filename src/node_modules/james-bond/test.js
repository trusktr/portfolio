var bond = require('./007.js');

var janus = {
    name: "Alec Trevelyan",
    stats: {
        kills: 8
    },
    kill: function(someone) {
        console.log('killed '+someone);
        this.stats.kills++;
    }
};

bond.observe(janus, function(intel) {
    console.log('Changes were made to these paths:', intel.paths);
});

setTimeout(function() {
    janus.kill('someone');
}, 1000);



If you need to update a view, or something, who knows, you can pass in the function responsible for it, plus arguments for the function. The intel parameter will be passed in as the last argument, that way updateView works without having to modify it's signature, but you can also take advantage of the intel parameter if you want to.

var bond = require('./007.js');

var janus = {
    name: "Alec Trevelyan",
    stats: {
        kills: 8
    },
    kill: function(someone) {
        console.log('killed '+someone);
        this.stats.kills++;
    }
};

// function updateView is defined somewhere else.

bond.observe(janus, updateView, arg1, arg2, arg3, etc);

setTimeout(function() {
    janus.kill('someone');
}, 1000);

