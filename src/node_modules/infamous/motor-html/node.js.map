{"version":3,"sources":["../src/motor-html/node.js"],"names":["MotorHTMLNode","_motorHtmlCounterpart","args","_imperativeCounterpartPromise","_updateNodeProperty","attribute","oldValue","newValue","match","imperativeCounterpart","window","parseFloat","parseStringArray","parseNumberArray","str","checkIsNumberArrayString","numbers","trim","split","length","checkIsSizeArrayString","strings","toLowerCase","Error","default","document","registerElement"],"mappings":"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","file":"node.js","sourcesContent":["\nimport styles from './node-style'\nimport Node from '../motor/Node'\nimport Transformable from '../motor/Transformable'\nimport Sizeable from '../motor/Sizeable'\nimport MotorHTMLBase, {initMotorHTMLBase, proxyGettersSetters} from './base'\n\ninitMotorHTMLBase()\n\nclass MotorHTMLNode extends MotorHTMLBase {\n\n    getStyles() {\n        return styles\n    }\n\n    // this is called by DeclarativeBase#init, which is called by\n    // WebComponent#connectedCallback, at which point this element has a\n    // parentNode.\n    // @override\n    _makeImperativeCounterpart() {\n        return new Node({\n            _motorHtmlCounterpart: this\n        })\n    }\n\n    async attributeChangedCallback(...args) {\n        super.attributeChangedCallback(...args)\n        await this._imperativeCounterpartPromise\n        this._updateNodeProperty(...args)\n    }\n\n    _updateNodeProperty(attribute, oldValue, newValue) {\n        // attributes on our HTML elements are the same name as those on\n        // the Node class (the setters).\n        if (newValue !== oldValue) {\n            if (attribute.match(/opacity/i))\n                this.imperativeCounterpart[attribute] = window.parseFloat(newValue)\n            else if (attribute.match(/sizeMode/i))\n                this.imperativeCounterpart[attribute] = parseStringArray(newValue)\n            else if (\n                attribute.match(/rotation/i)\n                || attribute.match(/scale/i)\n                || attribute.match(/position/i)\n                || attribute.match(/absoluteSize/i)\n                || attribute.match(/proportionalSize/i)\n                || attribute.match(/align/i)\n                || attribute.match(/mountPoint/i)\n                || attribute.match(/origin/i)\n                || attribute.match(/skew/i)\n            ) {\n                this.imperativeCounterpart[attribute] = parseNumberArray(newValue)\n            }\n            else {\n                /* nothing, ignore other attributes */\n            }\n        }\n    }\n}\n\n// This associates the Transformable getters/setters with the HTML-API classes,\n// so that the same getters/setters can be called from HTML side of the API.\nproxyGettersSetters(Transformable, MotorHTMLNode)\nproxyGettersSetters(Sizeable, MotorHTMLNode)\n\nfunction parseNumberArray(str) {\n    checkIsNumberArrayString(str)\n    const numbers = str.trim().split(/(?:\\s*,\\s*)|(?:\\s+)/g)\n    const length = numbers.length\n    if (length > 0) numbers[0] = window.parseFloat(numbers[0])\n    if (length > 1) numbers[1] = window.parseFloat(numbers[1])\n    if (length > 2) numbers[2] = window.parseFloat(numbers[2])\n    return numbers\n}\n\nfunction parseStringArray(str) {\n    checkIsSizeArrayString(str)\n    const strings = str.trim().toLowerCase().split(/(?:\\s*,\\s*)|(?:\\s+)/g)\n    const length = strings.length\n    if (length > 0) strings[0] = window.parseFloat(strings[0])\n    if (length > 1) strings[1] = window.parseFloat(strings[1])\n    if (length > 2) strings[2] = window.parseFloat(strings[2])\n    return strings\n}\n\nfunction checkIsNumberArrayString(str) {\n    if (!str.match(/^\\s*(((\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+))\\s*,){0,2}(\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+))))|((\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+))\\s){0,2}(\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+)))))\\s*$/g))\n        throw new Error(`Attribute must be a comma- or space-separated sequence of up to three numbers, for example \"1 2.5 3\". Yours was \"${str}\".`)\n}\n\nfunction checkIsSizeArrayString(str) {\n    if (!str.match(/^\\s*(((\\s*([a-zA-Z]+)\\s*,){0,2}(\\s*([a-zA-Z]+)))|((\\s*([a-zA-Z]+)\\s*){1,3}))\\s*$/g))\n        throw new Error(`Attribute must be a comma- or space-separated sequence of up to three strings, for example \"absolute absolute\". Yours was \"${str}\".`)\n}\n\nimport 'document-register-element'\nMotorHTMLNode = document.registerElement('motor-node', MotorHTMLNode)\n\nexport {MotorHTMLNode as default}\n"]}