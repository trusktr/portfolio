{"version":3,"sources":["src/DOMMatrixReadOnly.js"],"names":[],"mappings":"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","file":"DOMMatrixReadOnly.js","sourcesContent":["import DOMMatrix from './DOMMatrix'\nimport {multiplyToArray, applyArrayValuesToDOMMatrix} from './utilities'\n\n// This matrix is represented internally in row-major format so that it is easy\n// to look at visually. In a pair of coordinates (as in \"m23\") the first number\n// is the column and the second is the row (so \"m23\" means column 2 row 3).\nconst identity = [\n    /*m11*/1, /*m21*/0, /*m31*/0, /*m41*/0,\n    /*m12*/0, /*m22*/1, /*m32*/0, /*m42*/0,\n    /*m13*/0, /*m23*/0, /*m33*/1, /*m43*/0,\n    /*m14*/0, /*m24*/0, /*m34*/0, /*m44*/1,\n]\n\nexport default\nclass DOMMatrixReadOnly {\n\n    /**\n     * @param {Array.number} numberSequence An array of numbers. If the array\n     * has 6 items, then those items set the values of m11, m12, m21, m22, m41,\n     * m42 in that order (or the values a, b, c, d, e, f if you're using those\n     * aliases) and this.is2D is true. If the array has 16 items (in\n     * column-major order), then they set all the values of the underlying\n     * matrix (m11 to m44) and this.is2D is set false. Arrays of other lengths\n     * throw an error.\n     */\n    constructor(numberSequence = []) {\n        if (!(this instanceof DOMMatrix))\n            throw new TypeError(`DOMMatrixReadOnly can't be instantiated directly. Use DOMMatrix instead.`)\n\n        const {length} = numberSequence\n\n        if (length === undefined || !(length === 6 || length === 16))\n            throw new TypeError('DOMMatrix constructor argument \"numberSequence\" must be an array-like with 6 or 16 numbers.')\n\n        this._matrix = new Float64Array(identity)\n        this._isIdentity = true\n        this._is2D = length === 6 ? true : false\n\n        applyArrayValuesToDOMMatrix(numberSequence, this)\n    }\n\n    // Immutable transform methods -------------------------------------------\n\n    translate (tx, ty, tz = 0) {\n        return new DOMMatrix(this).translateSelf(tx, ty, tz)\n    }\n\n    scale (scale, originX = 0, originY = 0) {\n        return new DOMMatrix(this).scaleSelf(scale, originX, originY)\n    }\n\n    scale3d (scale, originX = 0, originY = 0, originZ = 0) {\n        return new DOMMatrix(this).scale3dSelf(scale, originX, originY, originZ)\n    }\n\n    scaleNonUniform (scaleX, scaleY = 1, scaleZ = 1, originX = 0, originY = 0, originZ = 0) {\n        return new DOMMatrix(this).scaleNonUniformSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)\n    }\n\n    rotate (angle, originX = 0, originY = 0) {\n        return new DOMMatrix(this).rotateSelf(angle, originX, originY)\n    }\n\n    // TODO\n    rotateFromVector (x, y) {\n        throw new Error('rotateFromVector is not implemented yet.')\n    }\n\n    rotateAxisAngle (x, y, z, angle) {\n        return new DOMMatrix(this).rotateAxisAngleSelf(x, y, z, angle)\n    }\n\n    skewX (sx) {\n        throw new Error('skewX is not implemented yet.')\n    }\n    skewY (sy) {\n        throw new Error('skewY is not implemented yet.')\n    }\n\n    multiply (other) {\n        return new DOMMatrix(this).multiplySelf(other)\n    }\n\n    flipX () {\n        throw new Error('flipX is not implemented yet.')\n    }\n    flipY () {\n        throw new Error('flipY is not implemented yet.')\n    }\n    inverse () {\n        throw new Error('inverse is not implemented yet.')\n    }\n\n    transformPoint(/*optional DOMPointInit*/ point) {\n        throw new Error('transformPoint is not implemented yet.')\n    }\n\n    toFloat32Array() {\n        return Float32Array.from(this._matrix)\n    }\n    toFloat64Array() {\n        return Float64Array.from(this._matrix)\n    }\n\n    //stringifier() {} // What's this?\n\n    get is2D() {\n        return this._is2D\n    }\n\n    /*\n     * TODO: make sure this matches the spec.\n     * TODO: Instead of calculating here, perhaps calculate and set\n     * this._isIdentity in other operations, and simply return the internal one\n     * here.\n     */\n    get isIdentity() {\n        for (var i = 0, len = this._matrix.length; i < len; i+=1) {\n            if (this._matrix[i] != identity[i])\n                return (this._isIdentity = false)\n        }\n\n        return (this._isIdentity = true)\n    }\n\n    get a() { return this.m11 }\n    get b() { return this.m12 }\n    get c() { return this.m21 }\n    get d() { return this.m22 }\n    get e() { return this.m41 }\n    get f() { return this.m42 }\n\n    get m11() { return this._matrix[0]  }\n    get m12() { return this._matrix[4]  }\n    get m13() { return this._matrix[8]  }\n    get m14() { return this._matrix[12] }\n\n    get m21() { return this._matrix[1]  }\n    get m22() { return this._matrix[5]  }\n    get m23() { return this._matrix[9]  }\n    get m24() { return this._matrix[13] }\n\n    get m31() { return this._matrix[2]  }\n    get m32() { return this._matrix[6]  }\n    get m33() { return this._matrix[10] }\n    get m34() { return this._matrix[14] }\n\n    get m41() { return this._matrix[3]  }\n    get m42() { return this._matrix[7]  }\n    get m43() { return this._matrix[11] }\n    get m44() { return this._matrix[15] }\n}\n"]}