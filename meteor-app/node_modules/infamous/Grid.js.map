{"version":3,"file":"Grid.js","sources":["../src/Grid.js"],"sourcesContent":["/*\n * LICENSE\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n */\n\nimport Modifier from 'famous/src/core/Modifier';\nimport Transform from 'famous/src/core/Transform';\n\nimport Molecule from './Molecule';\n\nimport forLength from 'army-knife/forLength';\n\n/**\n * A scenegraph tree with a variable number of leaf node Modifiers (the grid\n * cells) that are arranged in a grid. Add any [famous/src/core/RenderNode](#famous/src/core/RenderNode)-compatible\n * item to each leafnode of the grid.\n *\n * TODO: Use Molecule instead of Modifier for the grid cells.\n * TODO: Add an options parameter, that the Molecule constructor will handle.\n *\n * @class Grid\n * @extends Molecule\n */\nexport class Grid extends Molecule {\n\n    /**\n     * Creates a new Grid having the specified number of columns, number of rows,\n     * and famo.us-style size.\n     *\n     * @constructor\n     * @param {Number} columns The integer number of columns.\n     * @param {Number} rows The integer number of rows.\n     * @param {Array} size A famo.us-style width/height size array.\n     */\n    constructor(columns, rows, size) {\n        super({size: size});\n\n        this.columns = columns;\n        this.rows = rows;\n        this.cellNodes = [];\n\n        if (typeof this.options.size === 'undefined') { this.setOptions({size: [undefined, undefined]}); }\n\n        forLength(this.columns*this.rows, this._createGridCell.bind(this));\n    }\n\n    /**\n     * Creates a grid cell at the given index.\n     *\n     * @private\n     * @param {Number} index The integer index of the grid cell.\n     */\n    _createGridCell(index) {\n        const column = index % this.columns;\n        const row = Math.floor(index / this.columns);\n\n        let cellSize = null;\n        if (typeof this.options.size[0] != 'undefined' && typeof this.options.size[1] != 'undefined') {\n            cellSize = [];\n            cellSize[0] = this.options.size[0]/this.columns;\n            cellSize[1] = this.options.size[1]/this.rows;\n        }\n\n        const mod = new Modifier({\n            align: [0,0],\n            origin: [0,0],\n            size: cellSize? [cellSize[0], cellSize[1]]: [undefined, undefined],\n            transform: Transform.translate(column*cellSize[0],row*cellSize[1],0)\n        });\n        const mod2 = new Modifier({\n            //transform: Transform.rotateY(Math.PI/10),\n            align: [0.5,0.5],\n            origin: [0.5,0.5]\n        });\n        // FIXME: ^^^ Why do I need an extra Modifier to align stuff in the middle of the grid cells?????\n        this.cellNodes.push(this.add(mod).add(mod2));\n    }\n\n    /**\n     * Sets the items to be layed out in the grid.\n     *\n     * @param {Array} children An array of [famous/src/core/RenderNode](#famous/src/core/RenderNode)-compatible items.\n     */\n    setChildren(children) {\n        forLength(this.columns*this.rows, function(index) {\n            //this.cellNodes[index].set(null); // TODO: how do we erase previous children?\n            this.cellNodes[index].add(children[index]);\n        }.bind(this));\n        return this;\n    }\n}\nexport default Grid;\n"],"names":[],"mappings":"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"}