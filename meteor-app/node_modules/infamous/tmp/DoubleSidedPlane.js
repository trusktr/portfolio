/*
 * LICENSE
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */

import Transform from 'famous/src/core/Transform';

import Molecule from './Molecule';
import Plane from './Plane';

/**
 * A scenegraph tree who's two leaf nodes are [Plane](#Plane) instances facing
 * opposite directions. For the purposes of these docs, in a brand new app with
 * only a single `DoubleSidedPlane` added to the context, and having no
 * rotation, "plane1" faces you and "plane2" faces away.
 *
 * @class DoubleSidedPlane
 * @extends Molecule
 */
export var DoubleSidedPlane = (function (Molecule) {
    function DoubleSidedPlane(initialOptions) {
        Molecule.call(this, initialOptions);

        this.children = [];
        this.plane1 = new Plane(this.options);
        this.plane1.transform.set(Transform.rotate(0,0,0));
        this.setOptions({properties: {background: 'orange'}});
        this.plane2 = new Plane(this.options);
        this.plane2.transform.set(Transform.rotate(0,Math.PI,0));

        this.children.push(this.plane1);
        this.children.push(this.plane2);
        this.add(this.plane2)
        this.add(this.plane1);
        this.plane1.pipe(this.options.handler);
        this.plane2.pipe(this.options.handler);

    }

    if ( Molecule ) DoubleSidedPlane.__proto__ = Molecule;
    DoubleSidedPlane.prototype = Object.create( Molecule && Molecule.prototype );
    DoubleSidedPlane.prototype.constructor = DoubleSidedPlane;

    /**
     * Get the content of the [famous/src/core/Surface](#famous/src/core/Surface) of each [Plane](#Plane).
     *
     * @returns {Array} An array containing two items, the content of each
     * `Plane`. The first item is from "plane1".
     */
    DoubleSidedPlane.prototype.getContent = function getContent () {
        return [this.plane1.getContent(), this.plane2.getContent()];
    };

    /**
     * Set the content of both [Plane](#Plane) instances.
     *
     * @param {Array} content An array of content, one item per `Plane`. The
     * first item is for "plane1".
     */
    DoubleSidedPlane.prototype.setContent = function setContent (content) {
        this.plane1.setContent(content[0]);
        this.plane2.setContent(content[1]);
    };

    return DoubleSidedPlane;
}(Molecule));
export default DoubleSidedPlane;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG91YmxlU2lkZWRQbGFuZS5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL0RvdWJsZVNpZGVkUGxhbmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExJQ0VOU0VcbiAqXG4gKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cDovL21vemlsbGEub3JnL01QTC8yLjAvLlxuICpcbiAqL1xuXG5pbXBvcnQgVHJhbnNmb3JtIGZyb20gJ2ZhbW91cy9zcmMvY29yZS9UcmFuc2Zvcm0nO1xuXG5pbXBvcnQgTW9sZWN1bGUgZnJvbSAnLi9Nb2xlY3VsZSc7XG5pbXBvcnQgUGxhbmUgZnJvbSAnLi9QbGFuZSc7XG5cbi8qKlxuICogQSBzY2VuZWdyYXBoIHRyZWUgd2hvJ3MgdHdvIGxlYWYgbm9kZXMgYXJlIFtQbGFuZV0oI1BsYW5lKSBpbnN0YW5jZXMgZmFjaW5nXG4gKiBvcHBvc2l0ZSBkaXJlY3Rpb25zLiBGb3IgdGhlIHB1cnBvc2VzIG9mIHRoZXNlIGRvY3MsIGluIGEgYnJhbmQgbmV3IGFwcCB3aXRoXG4gKiBvbmx5IGEgc2luZ2xlIGBEb3VibGVTaWRlZFBsYW5lYCBhZGRlZCB0byB0aGUgY29udGV4dCwgYW5kIGhhdmluZyBub1xuICogcm90YXRpb24sIFwicGxhbmUxXCIgZmFjZXMgeW91IGFuZCBcInBsYW5lMlwiIGZhY2VzIGF3YXkuXG4gKlxuICogQGNsYXNzIERvdWJsZVNpZGVkUGxhbmVcbiAqIEBleHRlbmRzIE1vbGVjdWxlXG4gKi9cbmV4cG9ydCBjbGFzcyBEb3VibGVTaWRlZFBsYW5lIGV4dGVuZHMgTW9sZWN1bGUge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBgRG91YmxlU2lkZWRQbGFuZWAgd2hvJ3MgYGluaXRpYWxPcHRpb25zYCBnZXQgcGFzc2VkIHRvXG4gICAgICogYm90aCBbUGxhbmVdKCNQbGFuZSkgaW5zdGFuY2VzLCBhcyB3ZWxsIGFzIHRoaXMgRG91YmxlU2lkZWRQbGFuZSdzIHBhcmVudFxuICAgICAqIFtNb2xlY3VsZV0oI01vbGVjdWxlKSBjb25zdHJ1Y3Rvci5cbiAgICAgKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBpbml0aWFsT3B0aW9ucyBUaGUgb3B0aW9ucyB0byBpbml0aWF0ZSB0aGUgYERvdWJsZVNpZGVkUGxhbmVgIHdpdGguXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoaW5pdGlhbE9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoaW5pdGlhbE9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICAgICAgdGhpcy5wbGFuZTEgPSBuZXcgUGxhbmUodGhpcy5vcHRpb25zKTtcbiAgICAgICAgdGhpcy5wbGFuZTEudHJhbnNmb3JtLnNldChUcmFuc2Zvcm0ucm90YXRlKDAsMCwwKSk7XG4gICAgICAgIHRoaXMuc2V0T3B0aW9ucyh7cHJvcGVydGllczoge2JhY2tncm91bmQ6ICdvcmFuZ2UnfX0pO1xuICAgICAgICB0aGlzLnBsYW5lMiA9IG5ldyBQbGFuZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgICB0aGlzLnBsYW5lMi50cmFuc2Zvcm0uc2V0KFRyYW5zZm9ybS5yb3RhdGUoMCxNYXRoLlBJLDApKTtcblxuICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2godGhpcy5wbGFuZTEpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuLnB1c2godGhpcy5wbGFuZTIpO1xuICAgICAgICB0aGlzLmFkZCh0aGlzLnBsYW5lMilcbiAgICAgICAgdGhpcy5hZGQodGhpcy5wbGFuZTEpO1xuICAgICAgICB0aGlzLnBsYW5lMS5waXBlKHRoaXMub3B0aW9ucy5oYW5kbGVyKTtcbiAgICAgICAgdGhpcy5wbGFuZTIucGlwZSh0aGlzLm9wdGlvbnMuaGFuZGxlcik7XG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGNvbnRlbnQgb2YgdGhlIFtmYW1vdXMvc3JjL2NvcmUvU3VyZmFjZV0oI2ZhbW91cy9zcmMvY29yZS9TdXJmYWNlKSBvZiBlYWNoIFtQbGFuZV0oI1BsYW5lKS5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gQW4gYXJyYXkgY29udGFpbmluZyB0d28gaXRlbXMsIHRoZSBjb250ZW50IG9mIGVhY2hcbiAgICAgKiBgUGxhbmVgLiBUaGUgZmlyc3QgaXRlbSBpcyBmcm9tIFwicGxhbmUxXCIuXG4gICAgICovXG4gICAgZ2V0Q29udGVudCgpIHtcbiAgICAgICAgcmV0dXJuIFt0aGlzLnBsYW5lMS5nZXRDb250ZW50KCksIHRoaXMucGxhbmUyLmdldENvbnRlbnQoKV07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjb250ZW50IG9mIGJvdGggW1BsYW5lXSgjUGxhbmUpIGluc3RhbmNlcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IGNvbnRlbnQgQW4gYXJyYXkgb2YgY29udGVudCwgb25lIGl0ZW0gcGVyIGBQbGFuZWAuIFRoZVxuICAgICAqIGZpcnN0IGl0ZW0gaXMgZm9yIFwicGxhbmUxXCIuXG4gICAgICovXG4gICAgc2V0Q29udGVudChjb250ZW50KSB7XG4gICAgICAgIHRoaXMucGxhbmUxLnNldENvbnRlbnQoY29udGVudFswXSk7XG4gICAgICAgIHRoaXMucGxhbmUyLnNldENvbnRlbnQoY29udGVudFsxXSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgRG91YmxlU2lkZWRQbGFuZTtcbiJdLCJuYW1lcyI6WyJzdXBlciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVNBLE9BQU8sU0FBUyxNQUFNLDJCQUEyQixDQUFDOztBQUVsRCxPQUFPLFFBQVEsTUFBTSxZQUFZLENBQUM7QUFDbEMsT0FBTyxLQUFLLE1BQU0sU0FBUyxDQUFDOzs7Ozs7Ozs7OztBQVc1QixPQUFPLElBQU0sZ0JBQWdCLEdBQWlCO0lBQUMsQUFVM0MseUJBQVcsQ0FBQyxjQUFjLEVBQUU7UUFDeEJBLFFBQUssS0FBQSxDQUFDLE1BQUEsY0FBYyxDQUFDLENBQUM7O1FBRXRCLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOztRQUV6RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7O0tBRTFDOzs7OzhEQUFBOzs7Ozs7OztJQVFELDJCQUFBLFVBQVUsdUJBQUEsR0FBRztRQUNULE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztLQUMvRCxDQUFBOzs7Ozs7OztJQVFELDJCQUFBLFVBQVUsdUJBQUEsQ0FBQyxPQUFPLEVBQUU7UUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDdEMsQ0FBQSxBQUNKOzs7RUFqRHFDLFFBaURyQyxHQUFBO0FBQ0QsZUFBZSxnQkFBZ0IsQ0FBQzsifQ==