'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

require('./HasAttribute');

var _three = require('three');

var _BaseGeometryBehavior2 = require('./BaseGeometryBehavior');

var _BaseGeometryBehavior3 = _interopRequireDefault(_BaseGeometryBehavior2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DOMNodeGeometryBehavior = function (_BaseGeometryBehavior) {
    (0, _inherits3.default)(DOMNodeGeometryBehavior, _BaseGeometryBehavior);

    function DOMNodeGeometryBehavior() {
        (0, _classCallCheck3.default)(this, DOMNodeGeometryBehavior);

        return (0, _possibleConstructorReturn3.default)(this, (DOMNodeGeometryBehavior.__proto__ || (0, _getPrototypeOf2.default)(DOMNodeGeometryBehavior)).apply(this, arguments));
    }

    (0, _createClass3.default)(DOMNodeGeometryBehavior, [{
        key: 'createComponent',
        value: function createComponent(element) {

            // We have to use a BoxGeometry instead of a
            // PlaneGeometry because Three.js is not capable of
            // casting shadows from Planes, at least until we find
            // another way. Unfortunately, this increases polygon
            // count by a factor of 6. See issue
            // https://github.com/mrdoob/three.js/issues/9315
            return new _three.BoxGeometry(element.calculatedSize.x, element.calculatedSize.y, 1);
        }
    }]);

    return DOMNodeGeometryBehavior;
}(_BaseGeometryBehavior3.default);

exports.default = DOMNodeGeometryBehavior;


elementBehaviors.define('domnode-geometry', DOMNodeGeometryBehavior);