{"version":3,"file":"node.js","sources":["../../src/html/node.js"],"sourcesContent":["\nimport styles from './node-style'\nimport Node from '../core/Node'\nimport Transformable from '../core/Transformable'\nimport Sizeable from '../core/Sizeable'\nimport MotorHTMLBase, {initMotorHTMLBase, proxyGettersSetters} from './base'\n\ninitMotorHTMLBase()\n\nclass MotorHTMLNode extends MotorHTMLBase {\n\n    getStyles() {\n        return styles\n    }\n\n    // this is called by DeclarativeBase#init, which is called by\n    // WebComponent#connectedCallback, at which point this element has a\n    // parentNode.\n    // @override\n    _makeImperativeCounterpart() {\n        return new Node({\n            _motorHtmlCounterpart: this\n        })\n    }\n\n    attributeChangedCallback(...args) {\n        super.attributeChangedCallback(...args)\n\n        // TODO PERFORMANCE: we could possibly not stack a promise every\n        // attribute change, and just cache the latest value to set it when the\n        // imperativeCounterpart is ready.\n        this._imperativeCounterpartPromise.then(() => {\n            this._updateNodeProperty(...args)\n        })\n    }\n    //async attributeChangedCallback(...args) {\n        //super.attributeChangedCallback(...args)\n\n        //// TODO PERFORMANCE: we could possibly not stack a promise every\n        //// attribute change, and just cache the latest value to set it when the\n        //// imperativeCounterpart is ready.\n        //await this._imperativeCounterpartPromise\n        //this._updateNodeProperty(...args)\n    //}\n\n    _updateNodeProperty(attribute, oldValue, newValue) {\n        // attributes on our HTML elements are the same name as those on\n        // the Node class (the setters).\n        if (newValue !== oldValue) {\n            if (attribute.match(/opacity/i))\n                this.imperativeCounterpart[attribute] = window.parseFloat(newValue)\n            else if (attribute.match(/sizeMode/i))\n                this.imperativeCounterpart[attribute] = parseStringArray(newValue)\n            else if (\n                attribute.match(/rotation/i)\n                || attribute.match(/scale/i)\n                || attribute.match(/position/i)\n                || attribute.match(/absoluteSize/i)\n                || attribute.match(/proportionalSize/i)\n                || attribute.match(/align/i)\n                || attribute.match(/mountPoint/i)\n                || attribute.match(/origin/i)\n                || attribute.match(/skew/i)\n            ) {\n                this.imperativeCounterpart[attribute] = parseNumberArray(newValue)\n            }\n            else {\n                /* nothing, ignore other attributes */\n            }\n        }\n    }\n}\n\n// This associates the Transformable getters/setters with the HTML-API classes,\n// so that the same getters/setters can be called from HTML side of the API.\nproxyGettersSetters(Transformable, MotorHTMLNode)\nproxyGettersSetters(Sizeable, MotorHTMLNode)\n\nfunction parseNumberArray(str) {\n    checkIsNumberArrayString(str)\n    const numbers = str.trim().split(/(?:\\s*,\\s*)|(?:\\s+)/g)\n    const length = numbers.length\n    if (length > 0) numbers[0] = window.parseFloat(numbers[0])\n    if (length > 1) numbers[1] = window.parseFloat(numbers[1])\n    if (length > 2) numbers[2] = window.parseFloat(numbers[2])\n    return numbers\n}\n\nfunction parseStringArray(str) {\n    checkIsSizeArrayString(str)\n    const strings = str.trim().toLowerCase().split(/(?:\\s*,\\s*)|(?:\\s+)/g)\n    const length = strings.length\n    if (length > 0) strings[0] = strings[0]\n    if (length > 1) strings[1] = strings[1]\n    if (length > 2) strings[2] = strings[2]\n    return strings\n}\n\nfunction checkIsNumberArrayString(str) {\n    if (!str.match(/^\\s*(((\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+)|(\\d+(\\.\\d+)?e(-|\\+)?(\\d+)))\\s*,){0,2}(\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+)|(\\d+(\\.\\d+)?e(-|\\+)?(\\d+)))))|((\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+)|(\\d+(\\.\\d+)?e(-|\\+)?(\\d+)))\\s){0,2}(\\s*(-|\\+)?((\\.\\d+)|(\\d+\\.\\d+)|(\\d+)|(\\d+(\\.\\d+)?e(-|\\+)?(\\d+))))))\\s*$/g))\n        throw new Error(`Attribute must be a comma- or space-separated sequence of up to three numbers, for example \"1 2.5 3\". Yours was \"${str}\".`)\n}\n\nfunction checkIsSizeArrayString(str) {\n    if (!str.match(/^\\s*(((\\s*([a-zA-Z]+)\\s*,){0,2}(\\s*([a-zA-Z]+)))|((\\s*([a-zA-Z]+)\\s*){1,3}))\\s*$/g))\n        throw new Error(`Attribute must be a comma- or space-separated sequence of up to three strings, for example \"absolute absolute\". Yours was \"${str}\".`)\n}\n\nimport 'document-register-element'\nMotorHTMLNode = document.registerElement('motor-node', MotorHTMLNode)\n\nexport {MotorHTMLNode as default}\n"],"names":["super","this"],"mappings":"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"}