{"version":3,"file":"Utility.js","sources":["../../src/core/Utility.js"],"sourcesContent":["function epsilon(value) {\n    return Math.abs(value) < 0.000001 ? 0 : value;\n}\n\nfunction applyCSSLabel(value, label) {\n    if (value === 0) {\n        return '0px'\n    } else if (label === '%') {\n        return value * 100 + '%';\n    } else if (label === 'px') {\n        return value + 'px'\n    }\n}\n\nfunction animationFrame() {\n    let resolve = null\n    const promise = new Promise(r => resolve = r)\n    window.requestAnimationFrame(resolve)\n    return promise\n}\n\n// Create lowercase versions of each setter property.\n// we care only about the setters, for now.\nfunction makeLowercaseSetterAliases(object) {\n    const props = Object.getOwnPropertyNames(object)\n    for (let l=props.length, i=0; i<l; i+=1) {\n        const prop = props[i]\n        const lowercaseProp = prop.toLowerCase()\n        if (lowercaseProp != prop) {\n            const descriptor = Object.getOwnPropertyDescriptor(object, prop)\n            if (typeof descriptor.set != 'undefined') {\n                Object.defineProperty(object, lowercaseProp, descriptor)\n            }\n        }\n    }\n}\n\nlet childObservationHandlers = null\nlet childObserver = null\nfunction observeChildren(ctx, onConnect, onDisconnect) {\n    if (!childObservationHandlers) childObservationHandlers = new Map\n    if (!childObserver) childObserver = createChildObserver()\n    childObservationHandlers.set(ctx, {onConnect, onDisconnect})\n    childObserver.observe(ctx, { childList: true })\n    return true\n}\n\n// NOTE: If a child is disconnected then connected to the same parent in the\n// same turn, then the onConnect and onDisconnect callbacks won't be called\n// because the DOM tree will be back in the exact state as before (this is\n// possible thanks to the logic associated with weightsPerTarget).\nfunction createChildObserver() {\n    return new MutationObserver(changes => {\n        const weightsPerTarget = new Map\n\n        // We're just counting how many times each child node was added and\n        // removed from the parent we're observing.\n        for (let i=0, l=changes.length; i<l; i+=1) {\n            const change = changes[i]\n\n            if (change.type != 'childList') continue\n\n            if (!weightsPerTarget.has(change.target))\n                weightsPerTarget.set(change.target, new Map)\n\n            const weights = weightsPerTarget.get(change.target)\n\n            const {addedNodes} = change\n            for (let l=addedNodes.length, i=0; i<l; i+=1)\n                weights.set(addedNodes[i], (weights.get(addedNodes[i]) || 0) + 1)\n\n            const {removedNodes} = change\n            for (let l=removedNodes.length, i=0; i<l; i+=1)\n                weights.set(removedNodes[i], (weights.get(removedNodes[i]) || 0) - 1)\n        }\n\n        // TODO PERFORMANCE: Can these for..of loops be converted to regular for loops?\n        for (const [target, weights] of weightsPerTarget) {\n            const {onConnect, onDisconnect} = childObservationHandlers.get(target)\n\n            for (const [node, weight] of weights) {\n                // If the number of times a child was added is greater than the\n                // number of times it was removed, then the net result is that\n                // it was added, so we call onConnect just once.\n                if (weight > 0 && typeof onConnect == 'function')\n                    onConnect.call(target, node)\n\n                // If the number of times a child was added is less than the\n                // number of times it was removed, then the net result is that\n                // it was removed, so we call onConnect just once.\n                else if (weight < 0 && typeof onDisconnect == 'function')\n                    onDisconnect.call(target, node)\n\n                // If the number of times a child was added is equal to the\n                // number of times it was removed, then it was essentially left\n                // in place, so we don't call anything.\n            }\n        }\n    })\n}\n\nconst hasShadowDomV0 =\n    typeof Element.prototype.createShadowRoot == 'function'\n    && typeof HTMLContentElement == 'function'\n    ? true : false\n\nconst hasShadowDomV1 =\n    typeof Element.prototype.attachShadow == 'function'\n    && typeof HTMLSlotElement == 'function'\n    ? true : false\n\nfunction getShadowRootVersion(shadowRoot) {\n    console.log('getShadowRootVersion')\n    if (!shadowRoot) return null\n    const slot = document.createElement('slot')\n    shadowRoot.appendChild(slot)\n    slot.appendChild(document.createElement('div'))\n    const assignedNodes = slot.assignedNodes({ flatten: true })\n    slot.remove()\n    console.log('hmm', assignedNodes.length, assignedNodes.length > 0 ? 'v1' : 'v0')\n    return assignedNodes.length > 0 ? 'v1' : 'v0'\n}\n\nfunction getAncestorShadowRoot(node) {\n    let current = node\n\n    while (current && !(current instanceof ShadowRoot)) {\n        current = current.parentNode\n    }\n\n    return current\n}\n\n// in the future, the user will be able to toggle the HTML API.\nconst hasHtmlApi = true\n\n// Traverses a tree while considering ShadowDOM disribution.\nfunction traverse(node, isShadowChild) {\n    console.log(isShadowChild ? 'distributedNode:' : 'node:', node)\n\n    const {children} = node\n    for (let l=children.length, i=0; i<l; i+=1) {\n        // skip nodes that are possiblyDistributed, i.e. they have a parent\n        // that has a ShadowRoot.\n        if (!hasHtmlApi || !children[i]._elementManager.element._isPossiblyDistributed)\n            traverse(children[i])\n    }\n\n    const shadowChildren = node._elementManager.element._shadowChildren\n    if (hasHtmlApi && shadowChildren) {\n        for (let l=shadowChildren.length, i=0; i<l; i+=1)\n            traverse(shadowChildren[i].imperativeCounterpart, true)\n    }\n}\n\n// helper function to use instead of instanceof for classes that implement the\n// static Symbol.hasInstance method, because the behavior of instanceof isn't\n// polyfillable.\nfunction isInstanceof(lhs, rhs) {\n    if (typeof rhs == 'function' && rhs[Symbol.hasInstance])\n        return rhs[Symbol.hasInstance](lhs)\n    else return lhs instanceof rhs\n}\n\nexport {\n    epsilon,\n    applyCSSLabel,\n    animationFrame,\n    makeLowercaseSetterAliases,\n    observeChildren,\n    getShadowRootVersion,\n    hasShadowDomV0,\n    hasShadowDomV1,\n    getAncestorShadowRoot,\n    traverse,\n    isInstanceof,\n}\n"],"names":[],"mappings":"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"}