{"version":3,"file":"ElementManager.js","sources":["../../src/core/ElementManager.js"],"sourcesContent":["import Node from './Node'\nimport Motor from './Motor'\n\n/**\n * Manages a DOM element. Exposes a set of recommended APIs for working with\n * DOM efficiently. Currently doesn't do much yet...\n */\nclass ElementManager {\n    constructor(element) {\n        this.element = element\n    }\n\n    /**\n     * @param {Array.string} classes An array of class names to add to the\n     * managed element.\n     *\n     * Note: updating class names with `el.classList.add()` won't thrash the\n     * layout. See: http://www.html5rocks.com/en/tutorials/speed/animations\n     */\n    setClasses (...classes) {\n        if (classes.length) this.element.classList.add(...classes)\n        return this\n    }\n\n    /**\n     * Apply a style property to the element.\n     *\n     * @private\n     * @param  {string} property The CSS property we will a apply.\n     * @param  {string} value    The value the CSS property wil have.\n     */\n    applyStyle(property, value) {\n        this.element.style[property] = value\n    }\n\n    addChild(childElementManager) {\n        this.element.appendChild(childElementManager.element)\n    }\n\n    removeChild(childElementManager) {\n        // This conditional check is needed incase the element was already\n        // removed from the HTML-API side.\n        if (childElementManager.element.parentNode === this.element)\n            this.element.removeChild(childElementManager.element)\n    }\n\n    connectChildElement(childImperativeNode) {\n        if (\n\n            // When using the imperative API, this statement is\n            // true, so the DOM elements need to be connected.\n            !childImperativeNode._elementManager.element.parentNode\n\n            // This condition is irrelevant when strictly using the\n            // imperative API. However, it is possible that when\n            // using the HTML API that the HTML-API node can be placed\n            // somewhere that isn't another HTML-API node, and the\n            // imperative Node can be gotten and used to add the\n            // node to another imperative Node. In this case, the\n            // HTML-API node will be added to the proper HTMLparent.\n            || (childImperativeNode._elementManager.element.parentElement &&\n                childImperativeNode._elementManager.element.parentElement !== this.element)\n\n            // When an HTML-API node is already child of the\n            // relevant parent, or it is child of a shadow root of\n            // the relevant parent, there there's nothing to do,\n            // everything is already as expected, so the following\n            // conditional body is skipped.\n        ) {\n            this.addChild(childImperativeNode._elementManager)\n        }\n    }\n\n    disconnectChildElement(childImperativeNode) {\n        // If DeclarativeBase#removeChild was called first, we don't need to\n        // call this again.\n        if (!childImperativeNode._elementManager.element.parentNode) return\n\n        this.removeChild(childImperativeNode._elementManager)\n    }\n\n    /**\n     * Apply the DOMMatrix value to the style of this Node's element.\n     */\n    applyTransform (domMatrix) {\n\n        // for now, template strings need to be on one line, otherwise Meteor\n        // users will have bugs from Meteor's injected line numbers. See:\n        // https://github.com/meteor/meteor/issues/9160\n        var cssMatrixString = `matrix3d( ${ domMatrix.m11 }, ${ domMatrix.m12 }, ${ domMatrix.m13 }, ${ domMatrix.m14 }, ${ domMatrix.m21 }, ${ domMatrix.m22 }, ${ domMatrix.m23 }, ${ domMatrix.m24 }, ${ domMatrix.m31 }, ${ domMatrix.m32 }, ${ domMatrix.m33 }, ${ domMatrix.m34 }, ${ domMatrix.m41 }, ${ domMatrix.m42 }, ${ domMatrix.m43 }, ${ domMatrix.m44 })`;\n\n        this.applyStyle('transform', cssMatrixString)\n    }\n\n    /**\n     * [applySize description]\n     */\n    applySize (size) {\n        const {x,y} = size\n\n        this.applyStyle('width', `${x}px`)\n        this.applyStyle('height', `${y}px`)\n\n        // NOTE: we ignore the Z axis on elements, since they are flat.\n    }\n\n    applyOpacity(opacity) {\n        this.applyStyle('opacity', opacity)\n    }\n\n    applyImperativeNodeProperties(node) {\n\n        // Only Node is Transformable\n        if (node instanceof Node) {\n            this.applyOpacity(node._properties.opacity)\n            this.applyTransform(node._properties.transform)\n        }\n\n        // But both Node and Scene are Sizeable\n        this.applySize(node._calculatedSize)\n    }\n\n    shouldRender() {\n        const task = Motor.addRenderTask(() => {\n            this.applyStyle('display', 'block')\n            Motor.removeRenderTask(task)\n        })\n    }\n\n    shouldNotRender() {\n        const task = Motor.addRenderTask(() => {\n            this.applyStyle('display', 'none')\n            Motor.removeRenderTask(task)\n        })\n    }\n}\n\nexport {ElementManager as default}\n"],"names":[],"mappings":"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"}