'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _Observable = require('./Observable');

var _Observable2 = _interopRequireDefault(_Observable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Represents a set of values for the X, Y, and Z axes. For example, the
 * position of an object can be described using a set of 3 numbers, one for each
 * axis in 3D space: {x:10, y:10, z:10}.
 *
 * The value don't have to be numerical. For example,
 * {x:'foo', y:'bar', z:'baz'}
 */
var XYZValues = function (Observable) {
    function XYZValues(x, y, z) {
        if (x === void 0) x = 0;
        if (y === void 0) y = 0;
        if (z === void 0) z = 0;

        Observable.call(this);
        this._x = x;
        this._y = y;
        this._z = z;
    }

    if (Observable) XYZValues.__proto__ = Observable;
    XYZValues.prototype = Object.create(Observable && Observable.prototype);
    XYZValues.prototype.constructor = XYZValues;

    return XYZValues;
}(_Observable2.default);

// We set accessors manually because Buble doesn't make them configurable
// as per spec. Additionally we're maing these ones enumerable.
Object.defineProperties(XYZValues.prototype, {
    x: {
        set: function set(value) {
            this._x = value;
            this.triggerEvent('valuechanged', { x: value });
        },
        get: function get() {
            return this._x;
        },
        configurable: true,
        enumerable: true
    },

    y: {
        set: function set(value) {
            this._y = value;
            this.triggerEvent('valuechanged', { y: value });
        },
        get: function get() {
            return this._y;
        },
        configurable: true,
        enumerable: true
    },

    z: {
        set: function set(value) {
            this._z = value;
            this.triggerEvent('valuechanged', { z: value });
        },
        get: function get() {
            return this._z;
        },
        configurable: true,
        enumerable: true
    }
});

exports.default = XYZValues;
//# sourceMappingURL=XYZValues.js.map