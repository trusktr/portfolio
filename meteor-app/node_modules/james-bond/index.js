"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deeplyObserve = deeplyObserve;
Object.defineProperty(exports, "observe", {
  enumerable: true,
  get: function () {
    return _observe.observe;
  }
});
Object.defineProperty(exports, "unobserve", {
  enumerable: true,
  get: function () {
    return _observe.unobserve;
  }
});
exports.version = void 0;

var _splice = _interopRequireDefault(require("@babel/runtime/core-js/array/splice"));

var _observe = require("./observe");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deeplyObserve(object, handler, argumentArray) {
  var path = arguments[3];

  if (!(object instanceof Object)) {
    throw new Error("Cannot observe a non-object.");
  }

  if (typeof path == 'undefined') {
    path = "";
  }

  Object.observe(object, function (changes) {
    var paths = [];
    changes.forEach(function (change) {
      paths.push(path.length ? path + '.' + change.name : change.name);
    });

    if (typeof argumentArray != 'undefined') {
      handler.apply([{
        paths: paths
      }].concat(_splice.default.call(arguments, 2)));
    } else {
      handler({
        paths: paths
      });
    }
  });

  for (var prop in object) {
    if (object[prop] instanceof Object) {
      deeplyObserve(object[prop], handler, argumentArray, path.length ? path + '.' + prop : prop);
    }
  }
}

var version = '0.4.2';
exports.version = version;