{"version":3,"sources":["src/stringsToNums.js"],"names":[],"mappings":";;;QAEgB,aAAa,GAAb,aAAa;AAAtB,SAAS,aAAa,CAAC,GAAG,EAAE;AAChC,OAAI,MAAM,GAAG,EAAE,CAAC;AAChB,MAAG,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AACtC,UAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC7B,UAAI,IAAI,YAAY,KAAK,EAAE;AACxB,eAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;OAC9C,MACI,IAAK,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAG;AACpC,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACpB,MACI;AACF;;;AAGN;;qBAEK,aAAa","file":"src/stringsToNums.js","sourcesContent":["\n// given an array that possibly contains more arrays, flatten the array and convert each item into a number, or null if not a number.\nexport function stringsToNums(arr) {\n   var result = [];\n   arr.forEach(function(item, index, array) {\n      var value = parseFloat(item);\n      if (item instanceof Array) {\n         result = result.concat(stringsToNums(item));\n      }\n      else if ( value.toString() === \"NaN\" ) {\n         result.push(null);\n      }\n      else {\n         result.push(value);\n      }\n   });\n   return result;\n}\nexport {stringsToNums as default};\n"]}